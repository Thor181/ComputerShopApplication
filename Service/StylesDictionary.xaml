<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">


    <Style x:Key="CustomWindow" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize"></Setter>
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="BorderCanvas" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource GlobalBackgroundColor}" />
        <Setter Property="CornerRadius" Value="10" />
    </Style>

    <Style x:Key="ButtonStandart" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width"  Value="150" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
        <Setter Property="FontSize" Value="15 " />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button" >
                    
                    <Border x:Name="border"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="5"
                            SnapsToDevicePixels="True"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                        <ContentPresenter Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Margin="{TemplateBinding Padding}"/>

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                <GradientStop Color="#2C5364" Offset="0"></GradientStop>
                                <GradientStop Color="#203A43" Offset="1"></GradientStop>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    
                    <ControlTemplate.Triggers >
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                        <GradientStop Color="#203A43" Offset="0"></GradientStop>
                                        <GradientStop Color="#2C5364" Offset="1"></GradientStop>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="1"></TranslateTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMenu" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width"  Value="150" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
        <Setter Property="FontSize" Value="15 " />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button" >

                    <Border x:Name="border"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="0"
                            SnapsToDevicePixels="True"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent">

                        <ContentPresenter Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>

                    <ControlTemplate.Triggers >
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0 0.5" EndPoint="1 0.5">
                                        <GradientStop Color="#162830" Offset="0"></GradientStop>
                                        <GradientStop Color="#101C20" Offset="1"></GradientStop>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="1"></TranslateTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ControlKey" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="8" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Path x:Name="icon" Data="{TemplateBinding Content}" Fill="Black" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>


                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2C5364" />
                            <Setter Property="Fill" Value="White" TargetName="icon" />
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"></Condition>
                                <Condition Property="Tag" Value="CloseButton"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#203A43" />
                            <Setter Property="Fill" Value="White" TargetName="icon"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"></Condition>
                                <Condition Property="Tag" Value="NotCloseButton"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="DarkGray" />
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"></Condition>
                                <Condition Property="Tag" Value="CloseButton"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="DarkRed" />
                        </MultiTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleMenuButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Viewbox Height="20" Width="20" Margin="0 6 0 0" Stretch="UniformToFill">
                            <materialDesign:PackIcon Kind="ArrowExpandRight"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border"  Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border"  Value="Transparent" />
                            <Setter Property="BorderBrush" TargetName="border"  Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>
    
</ResourceDictionary>